{"version":3,"sources":["play-list.view.js","play-list.controller.js","radio.controller.js","App.js","index.js"],"names":["play_list_view","Wrapper","styled","div","_templateObject","Main","main","_templateObject2","Header","header","_templateObject3","HeaderButton","button","_templateObject4","RadioContainer","_templateObject5","Player","_templateObject6","ButtonsBlock","_templateObject7","PlayButtons","img","_templateObject8","TrackTitleBlock","_templateObject9","TrackTitle","span","_templateObject10","props","bold","ControlBlock","_templateObject11","ControlBlockButton","_templateObject12","VolumeBlock","_templateObject13","VolumeLvl","_templateObject14","TracksListBlock","ul","_templateObject15","hide","Track","li","_templateObject16","chosen","Field","_templateObject17","Control","_templateObject18","Like","_templateObject19","View","PlayList","state","index","play","visible","mixed","muted","value","onTrackClick","idx","_this","setState","onPlay","pause","audio","onVolume","volume","onPlayPrev","numbOfTracks","musicData","length","RandomTrack","_ref","onPlayNext","_ref2","Math","floor","random","onVisible","onMix","onLike","console","log","onMute","NextTrackPlay","_ref3","_this2","this","_this$state","react_default","a","createElement","onClick","src","alt","track","author","liked","js_default","maxValue","minValue","onChange","onEnded","type","controls","autoPlay","ref","map","item","key","id","bind","duration","Component","Radio","radio_controller_PlayButtons","radio_controller_ControlBlock","radio_controller_ControlBlockButton","radio_controller_VolumeBlock","radio_controller_VolumeLvl","App","react_router_dom","basename","process","to","react_router","path","render","play_list_controller_PlayList","exact","component","ReactDOM","App_App","document","getElementById"],"mappings":"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","file":"static/js/main.a3024670.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport default {\n  Wrapper: styled.div`\n   background-image: url(https://i.pinimg.com/originals/81/23/90/8123906a54a506342afff166ae85dd23.jpg);\n\tbackground-size: cover;\n  display: flex;\n  align-items: flex-end;\n  width: 100vw;\n  height: 100vh;\n  `,\n\n  Main: styled.main`\n    background-color: rgba(0, 0, 0, 0.5);\n    color: rgba(255, 255, 255);\n    width: 613px; \n    display: flex;\n    flex-flow: column nowrap;\n    align-items: center;\n  `,\n\n  Header: styled.header`\n  margin-top: 25px;\n  margin-bottom: 20px;\n  \n  `,\n  HeaderButton: styled.button` \n    background-color: transparent;\n    background-repeat:no-repeat;\n    border: none;\n    color: white;\n    cursor:pointer;\n    font-size: 18px;\n    outline:none;\n  `,\n  RadioContainer: styled.div`\n    height: 164px;\n  `,\n\n  Player: styled.div`\n    box-sizing: border-box;\n    display: flex;\n    flex-flow: column nowrap;\n    align-content: flex-start;\n    padding-left: 70px;\n    width: 100%;\n`,\n\n  ButtonsBlock: styled.div`\n    box-sizing: border-box;\n    display: flex;\n    flex-wrap: nowrap;\n    justify-content: flex-end;\n    padding-right: 50px;\n  `,\n  PlayButtons: styled.img`\n    cursor: pointer;\n    width: 20px;\n    height: 20px;\n    display: inline-block;\n    padding: 0 4px;\n  `,\n\n  TrackTitleBlock: styled.div`\n    margin: 10px auto 0;\n  `,\n  TrackTitle: styled.span`\n    font-weight: ${ props => props.bold ?\n    \"bold\" : \"normal\"};\n    font-size: 24px;\n  `,\n\n  ControlBlock: styled.div`\n    display: flex;\n    flex-wrap: nowrap;\n    margin: 20px auto 70px;\n  `,\n  ControlBlockButton: styled.img`\n    cursor: pointer;\n    width: 18px;\n    height: 20px;\n    margin: 0 5px 0 10px;\n  `,\n  VolumeBlock: styled.div`\n    width: 220px;\n    margin: auto 20px;\n  `,\n  VolumeLvl: styled.span`\n    font-size: 14px;\n    width: 25px;\n  `,\n  \n  TracksListBlock: styled.ul`\n    box-sizing: border-box;\n    max-height: calc(100vh - 55px);\n    display: ${props => props.hide ?\n      \"none\" : \"initial\"};\n    /* transition: .5s ease-in-out */ \n  `,\n  Track: {\n    Wrapper: styled.li`\n      background-color: ${props => props.chosen ?\n      \"rgba(255, 255, 255, 0.2)\" : \"initial\"};\n      line-height: 35px;\n      flex-direction: row;\n      padding-right: 18px;\n      cursor: pointer;\n      &:hover {\n          background-color: rgba(255, 255, 255, 0.2);\n      }`,\n      Field: styled.span`\n        font-weight: ${ props => props.bold ?\n        \"bold\" : \"normal\"};\n        padding-left: 5px;\n        padding-right: 10px;\n      `,\n      Control: styled.div`\n        /* display: inline-block; */\n       float: right;\n      `,\n  },\n  Like: styled.img`\n    margin-right: 40px;\n  `,\n};\n","import React, { Component } from 'react';\n\nimport InputRange from 'react-input-range';\nimport 'react-input-range/lib/css/index.css';\nimport './volume-range.css';\n\nimport View from './play-list.view';\nconst { Player, ButtonsBlock, \n    PlayButtons, TrackTitleBlock, \n    ControlBlock, ControlBlockButton,\n    VolumeBlock, TracksListBlock, VolumeLvl,\n    TrackTitle, Track, Like } = View;\n\nexport default class PlayList extends Component {\n     \n    state = {\n        index: 0,\n        play: false,\n        visible: false,\n        mixed: false,\n        muted: false,\n        value: 100,\n    };\n    \n    // onChosen = (idx) => {\n    //     console.log(`I've chosen the track №: ${this.props.musicData[idx].id}`)\n        \n    // }\n    onTrackClick = (idx) => {\n        this.play();\n        this.setState({\n                index: idx\n            });\n    };\n    \n    \n    onPlay = () => {\n        this.state.play ? \n        this.pause() :\n        this.play()\n    };\n    play = () => {\n        this.audio.play();\n        this.setState({\n            play: true\n        });\n    };\n    pause = () => {\n        this.audio.pause() ;\n        this.setState({\n            play: false\n        });\n    };\n\n\n    onVolume = ( value ) => {\n        this.audio.volume = value * 0.01;\n        this.setState( {\n            value: value\n        });\n    };\n\n\n    onPlayPrev = () => {\n        const numbOfTracks = this.props.musicData.length;\n        this.state.mixed ?\n        this.RandomTrack()\n        :\n        this.setState( ({ index }) => {\n            if (( index - 1) < 0 ) {\n                return {\n                    index: numbOfTracks-1\n                };\n            };\n            return {\n                index: index - 1\n            };\n        }) ;\n    };\n    onPlayNext = () => {\n        const numbOfTracks = this.props.musicData.length; \n        this.state.mixed ?\n        this.RandomTrack()\n        :\n        this.setState( ({ index }) => {\n            if ((index + 1) >= numbOfTracks ) {\n                return {\n                    index: 0\n                };\n            };\n            return {\n                index: index + 1\n            };\n        });\n    };\n    RandomTrack = () => {\n        const numbOfTracks = this.props.musicData.length; \n        this.setState(() =>{\n            const nextRandomSong = Math.floor(Math.random() * Math.floor(numbOfTracks));\n            return {\n                index: nextRandomSong\n            };\n        }) \n    };\n    onVisible = () => {\n        this.setState( () => {\n            return {\n                visible: !this.state.visible\n            };\n        });\n    };\n    onMix = () => {\n        this.setState( () => {\n            return {\n                mixed: !this.state.mixed\n            };\n        });\n    };\n    onLike = () => {\n        console.log(\"Like!\")\n    };\n    onMute = () => {\n        this.setState( () => {\n            return {\n                muted: !this.state.muted\n            };\n        });\n    };\n\n    NextTrackPlay = () => {\n        const numbOfTracks = this.props.musicData.length;\n        this.state.mixed ?\n        this.RandomTrack()\n        :\n        this.setState( ({ index }) => {\n            if ((index + 1) >= numbOfTracks ) {\n                return {\n                    index: 0\n                };\n            }\n            return {\n                index: index + 1\n            };\n        });\n        \n    };\n\n    render() {\n      const { musicData } = this.props;\n      const { index, play, visible, mixed, muted } = this.state;\n        \n      return (\n            <Player>  \n                <ButtonsBlock>\n                        <PlayButtons \n                            onClick = { this.onPlayPrev }\n                            src=\"img/prev-song.svg\" alt=\"back\"/>\n                        <PlayButtons \n                            onClick = { this.onPlay }\n                            src={ play ? \"img/pause.svg\" : \"img/play.svg\"} alt=\"play\"/>\n                        <PlayButtons \n                            onClick = { this.onPlayNext }\n                            src=\"img/next-song.svg\" alt=\"next\"/>\n                </ButtonsBlock>\n                \n                <TrackTitleBlock>\n                    <TrackTitle>{musicData[index].track}</TrackTitle>\n                    <TrackTitle> - </TrackTitle>\n                    <TrackTitle bold>{musicData[index].author}</TrackTitle>\n                </TrackTitleBlock>\n                \n                <ControlBlock>\n                        <ControlBlockButton \n                            onClick = { this.onVisible }\n                            src={ visible ? \"img/player-list-actived.svg\" : \"img/player-list.svg\" } alt=\"playlist-on\"/>\n                        <ControlBlockButton \n                            onClick = { this.onMix }\n                            src={ mixed ? \"img/player-mix-actived.svg\" : \"img/player-mix.svg\"} alt=\"mixing\"/>\n                        <ControlBlockButton \n                            onClick = { this.onLike }\n                            src={ musicData[index].liked ? \"img/track-liked.svg\" : \"img/track-not-liked.svg\"} alt=\"like\"/>\n                        <ControlBlockButton \n                            onClick = { this.onMute}\n                            src={ muted ? \"img/mute.svg\" : \"img/volume.svg\" } alt=\"volume\" />\n                        <VolumeBlock>\n                            <InputRange\n                                maxValue={100}\n                                minValue={0}\n                                value={this.state.value}\n                                onChange={ this.onVolume } />\n                        </VolumeBlock>\n                        <audio\n                            onEnded = { this.NextTrackPlay }\n                            src={musicData[index].src}\n                            type=\"audio/mp3\" \n                            controls = {false}\n                            autoPlay={play}\n                            muted= {muted}\n                            ref={(audio) => {\n                                this.audio = audio\n                            \n                            }}>\n                        </audio>\n                        <VolumeLvl>{this.state.value}%</VolumeLvl>\n                </ControlBlock>\n                \n                <TracksListBlock hide = { !this.state.visible }>\n                    {musicData.map((item, idx) => {\n                        return (\n                                <Track.Wrapper \n                                    // Вивчити краще те, що нижче. \n                                    chosen = { this.state.index === idx }\n                                    key={item.id} \n                                    // onClick = { () => his.onTrackClick(indx) } \n                                    onClick = { this.onTrackClick.bind(this, idx) }>\n                                     {/* onClick = { () => {\n                                         this.onTrackClick.bind(this, idx)();\n                                         this.onChosen.bind(this, idx)();\n                                     } }> */}\n                                    <Track.Field>{ this.state.index === idx ? <img src=\"img/play.svg\" alt=\"play\"/> : item.id }</Track.Field>\n                                    <Track.Field bold>{item.author}</Track.Field>\n                                    <Track.Field> - </Track.Field>\n                                    <Track.Field>{item.track}</Track.Field> \n                                    <Track.Control>\n                                        <Like src={ item.liked ? \"img/track-liked.svg\" : \"img/track-not-liked.svg\"} alt=\"like\"/>\n                                        <Track.Field>{Math.floor(item.duration/60)}-{item.duration % 60}</Track.Field>\n                                        <img src=\"img/track-actions.svg\" alt=\"action\"/>\n                                    </Track.Control>                           \n                                </Track.Wrapper>  \n                        );\n                    })}\n                </TracksListBlock>\n            </Player>\n        );\n    };\n};","import React, { Component } from 'react';\n\nimport InputRange from 'react-input-range';\nimport 'react-input-range/lib/css/index.css';\nimport './volume-range.css';\n\nimport View from './play-list.view';\nconst { VolumeBlock, VolumeLvl, \n        RadioContainer, PlayButtons,\n        ControlBlockButton, ControlBlock } = View;\n\nexport default class Radio extends Component {\n    state = {\n        index: 0,\n        play: false,\n        muted: false,\n        value: 100,\n        liked: false\n    };\n    \n    onVolume = ( value ) => {\n        this.audio.volume = value * 0.01;\n        this.setState( {\n            value: value\n        });\n    };\n\n    onPlay = () => {\n        this.state.play ? \n        this.pause() :\n        this.play()\n    };\n    play = () => {\n        this.audio.play();\n        this.setState({\n            play: true\n        });\n    };\n    pause = () => {\n        this.audio.pause() ;\n        this.setState({\n            play: false\n        });\n    };\n\n    onLike = () => {\n        console.log(\"Like!\")\n    };\n    onMute = () => {\n        this.setState( () => {\n            return {\n                muted: !this.state.muted\n            };\n        });\n    };\n\n    render() {\n\n        const { play, liked, muted } = this.state;\n\n        return (\n            <RadioContainer>\n                <PlayButtons \n                        onClick = { this.onPlay }\n                        src={ play ? \"img/pause.svg\" : \"img/play.svg\"} alt=\"play\"/>\n                <ControlBlock>\n                    <ControlBlockButton \n                        onClick = { this.onLike }\n                        src={ liked ? \"img/track-liked.svg\" : \"img/track-not-liked.svg\"} alt=\"like\"/>\n                    <ControlBlockButton \n                        onClick = { this.onMute}\n                        src={ muted ? \"img/mute.svg\" : \"img/volume.svg\" } alt=\"volume\" />\n                    <VolumeBlock>\n                        <InputRange\n                            maxValue={100}\n                            minValue={0}\n                            value={this.state.value}\n                            onChange={ this.onVolume } />\n                    </VolumeBlock>\n                    <audio \n                        src=\"http://live.radioec.com.ua:8000/kiev\"\n                        type=\"audio/mp3\"\n                        autoPlay = { play }\n                        controls = { false }\n                        ref={(audio) => { this.audio = audio }}\n                    />\n                    <VolumeLvl>{this.state.value}%</VolumeLvl>\n                </ControlBlock>\n            </RadioContainer>\n        );\n    };\n};","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Link, Switch, Redirect } from 'react-router-dom';\nimport musicData from './music-data.json';\n\nimport PlayList from './play-list.controller';\nimport Radio from './radio.controller';\nimport View from './play-list.view';\n\n\nconst { Wrapper, Main, Header } = View;\nexport default class App extends Component {\n  \n  render() {\n\n    return (\n      <Wrapper>\n        <Router basename={process.env.PUBLIC_URL}>\n          <Main>\n            <Header>\n              <Link to=\"/\">Playlist</Link>\n              <Link to=\"/radio\">Radio</Link>\n            </Header>\n            <Switch>\n              <Route path='/' \n                     render = { () => (\n                        <PlayList musicData = { musicData }  />\n                     )} \n                    exact />\n              <Route path='/radio' component = { Radio } />\n              <Redirect to=\"/\" />\n            </Switch> \n          </Main>\n        </Router>\n      </Wrapper>\n      \n    );\n  };\n};\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}